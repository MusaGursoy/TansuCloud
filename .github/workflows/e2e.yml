name: E2E Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  DOTNET_NOLOGO: true

jobs:
  e2e:
    name: E2E smoke (alias + login)
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore
        run: dotnet restore ./TansuCloud.sln

      - name: Install Playwright (browsers + deps)
        run: |
          dotnet tool update --global Microsoft.Playwright.CLI || dotnet tool install --global Microsoft.Playwright.CLI
          playwright install --with-deps

      - name: Build
        run: dotnet build ./TansuCloud.sln -c Debug --no-restore

      - name: Compose up (infra + apps)
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          PGCAT_ADMIN_USER: admin
          PGCAT_ADMIN_PASSWORD: admin
          DASHBOARD_CLIENT_SECRET: dev-secret
          PUBLIC_BASE_URL: http://127.0.0.1:8080
        run: |
          docker compose -f ./docker-compose.yml up -d --build

      - name: Wait for Identity discovery
        run: |
          set -e
          for i in {1..60}; do
            if curl -fsS http://127.0.0.1:8080/identity/.well-known/openid-configuration > /dev/null; then
              echo "Identity discovery is ready"; exit 0;
            fi
            echo "Waiting for identity discovery... ($i)"; sleep 2;
          done
          echo "Identity discovery did not become ready in time" >&2; exit 1

      - name: Run alias test
        env:
          PUBLIC_BASE_URL: http://127.0.0.1:8080
        run: |
          dotnet test ./tests/TansuCloud.E2E.Tests/TansuCloud.E2E.Tests.csproj -c Debug --filter "FullyQualifiedName~TansuCloud.E2E.Tests.GatewayAliasTests.Gateway_LoginAlias_Returns_LoginForm" --logger "trx;LogFileName=alias.trx"

      - name: Run login test
        env:
          PUBLIC_BASE_URL: http://127.0.0.1:8080
        run: |
          dotnet test ./tests/TansuCloud.E2E.Tests/TansuCloud.E2E.Tests.csproj -c Debug --filter "FullyQualifiedName~TansuCloud.E2E.Tests.DashboardLoginE2E.Dashboard_Login_And_Circuit_Works" --logger "trx;LogFileName=login.trx"

      - name: Dump compose logs (on failure)
        if: failure()
        run: |
          mkdir -p artifacts
          docker compose -f ./docker-compose.yml ps
          docker compose -f ./docker-compose.yml logs --no-color > artifacts/compose.log || true
          ls -la

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-logs
          path: |
            artifacts/**
            **/*.trx

      - name: Compose down
        if: always()
        run: docker compose -f ./docker-compose.yml down -v
