name: UI E2E (Playwright)

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch: {}

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Load base URLs from .env
        shell: pwsh
        run: |
          . ./dev/tools/common.ps1
          Import-TansuDotEnv -Overwrite | Out-Null
          $urls = Resolve-TansuBaseUrls -PreferLoopbackForGateway
          "PUBLIC_BASE_URL=$($urls.PublicBaseUrl)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "GATEWAY_BASE_URL=$($urls.GatewayBaseUrl)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Docker Compose up (infra)
        run: |
          docker compose --env-file ./.env up -d postgres redis pgcat pgcat-config

      - name: Docker Compose up (apps)
        run: |
          docker compose --env-file ./.env up -d identity dashboard db storage telemetry gateway

      - name: Wait for readiness (gateway)
        run: |
          for i in {1..50}; do
            if curl -fsS "$PUBLIC_BASE_URL/health/ready" >/dev/null; then
              echo "Gateway ready"; break; fi; sleep 3; done
          curl -fsS "$PUBLIC_BASE_URL/identity/.well-known/openid-configuration" >/dev/null

      - name: Install Playwright browsers
        run: |
          dotnet build ./TansuCloud.sln -c Debug
          pwsh -NoProfile -Command "& { Set-Location tests/TansuCloud.E2E.Tests; npx playwright install chromium }"

      - name: Run AdminRateLimits UI E2E (headless)
        env:
          PW_HEADFUL: '0'
          GATEWAY_BASE_URL: ${{ env.GATEWAY_BASE_URL }}
        run: |
          dotnet test ./tests/TansuCloud.E2E.Tests/TansuCloud.E2E.Tests.csproj -c Debug --filter FullyQualifiedName~TansuCloud.E2E.Tests.AdminRateLimitsUiE2E
        continue-on-error: true
        id: run_tests

      - name: Collect gateway logs
        if: always()
        run: |
          mkdir -p test-results
          docker compose --env-file ./.env logs gateway > test-results/gateway-logs.txt || true

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-e2e-artifacts
          path: |
            test-results/**
            **/pw-*.png
            **/pw-*.html
            **/pw-*.zip

      - name: Fail if tests failed
        if: steps.run_tests.outcome != 'success'
        run: |
          echo "UI E2E failed. See artifacts for screenshots/HTML and gateway logs." >&2
          exit 1
