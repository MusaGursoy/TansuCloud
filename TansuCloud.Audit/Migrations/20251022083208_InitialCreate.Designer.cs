// <auto-generated />
using System;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TansuCloud.Audit;

#nullable disable

namespace TansuCloud.Audit.Migrations
{
    [DbContext(typeof(AuditDbContext))]
    [Migration("20251022083208_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TansuCloud.Audit.AuditEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("action");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("category");

                    b.Property<string>("ClientIpHash")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("client_ip_hash");

                    b.Property<string>("CorrelationId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("correlation_id");

                    b.Property<JsonDocument>("Details")
                        .HasColumnType("jsonb")
                        .HasColumnName("details");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("environment");

                    b.Property<string>("IdempotencyKey")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("idempotency_key");

                    b.Property<string>("ImpersonatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("impersonated_by");

                    b.Property<string>("Outcome")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("outcome");

                    b.Property<string>("ReasonCode")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("reason_code");

                    b.Property<string>("RouteTemplate")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("route_template");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("service");

                    b.Property<string>("SourceHost")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("source_host");

                    b.Property<string>("SpanId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("span_id");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("subject");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("tenant_id");

                    b.Property<string>("TraceId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("trace_id");

                    b.Property<string>("UniqueKey")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("unique_key");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("user_agent");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("version");

                    b.Property<DateTimeOffset>("WhenUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("when_utc");

                    b.HasKey("Id");

                    b.HasIndex("Action")
                        .HasDatabaseName("ix_audit_events_action");

                    b.HasIndex("Category")
                        .HasDatabaseName("ix_audit_events_category");

                    b.HasIndex("CorrelationId")
                        .HasDatabaseName("ix_audit_events_correlation_id");

                    b.HasIndex("Details")
                        .HasDatabaseName("ix_audit_events_details_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Details"), "gin");

                    b.HasIndex("Environment")
                        .HasDatabaseName("ix_audit_events_environment");

                    b.HasIndex("IdempotencyKey")
                        .HasDatabaseName("ix_audit_events_idempotency_key");

                    b.HasIndex("Service")
                        .HasDatabaseName("ix_audit_events_service");

                    b.HasIndex("Subject")
                        .HasDatabaseName("ix_audit_events_subject");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("ix_audit_events_tenant_id");

                    b.HasIndex("TraceId")
                        .HasDatabaseName("ix_audit_events_trace_id");

                    b.HasIndex("WhenUtc")
                        .HasDatabaseName("ix_audit_events_when_utc");

                    b.HasIndex("Service", "WhenUtc")
                        .HasDatabaseName("ix_audit_events_service_when");

                    b.HasIndex("TenantId", "WhenUtc")
                        .HasDatabaseName("ix_audit_events_tenant_when");

                    b.ToTable("audit_events");
                });
#pragma warning restore 612, 618
        }
    }
}
