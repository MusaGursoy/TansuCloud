receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  hostmetrics:
    collection_interval: 15s
    scrapers:
      cpu: {}
      load: {}
      memory: {}
      filesystem: {}
      network: {}
  prometheus/postgres:
    config:
      scrape_configs:
        - job_name: postgres
          scrape_interval: 30s
          static_configs:
            - targets: ["postgres-exporter:9187"]
  prometheus/redis:
    config:
      scrape_configs:
        - job_name: redis
          scrape_interval: 15s
          static_configs:
            - targets: ["redis-exporter:9121"]
  prometheus/zookeeper:
    config:
      scrape_configs:
        - job_name: zookeeper
          scrape_interval: 30s
          static_configs:
            - targets: ["zookeeper:7000"]
          metrics_path: /metrics
  prometheus/clickhouse:
    config:
      scrape_configs:
        - job_name: clickhouse
          scrape_interval: 30s
          static_configs:
            - targets: ["clickhouse:9363"]

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777

exporters:
  clickhousetraces:
    datasource: tcp://admin:admin@clickhouse:9000/signoz_traces
    low_cardinal_exception_grouping: ${env:LOW_CARDINAL_EXCEPTION_GROUPING}
    # Use new schema to avoid legacy table dependencies
    use_new_schema: true
  signozclickhousemetrics:
    dsn: tcp://admin:admin@clickhouse:9000/signoz_metrics
  clickhouselogsexporter:
    dsn: tcp://admin:admin@clickhouse:9000/signoz_logs
    timeout: 10s
    # Use new schema to avoid legacy table dependencies
    use_new_schema: true

processors:
  batch: {}
  resourcedetection:
    detectors: [env, system]

service:
  telemetry:
    logs:
      encoding: json
  extensions: [health_check, pprof]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resourcedetection, batch]
      exporters: [clickhousetraces]
    logs:
      receivers: [otlp]
      processors: [resourcedetection, batch]
      exporters: [clickhouselogsexporter]
    metrics:
      receivers: [otlp, hostmetrics, prometheus/postgres, prometheus/redis, prometheus/zookeeper, prometheus/clickhouse]
      processors: [batch]
      exporters: [signozclickhousemetrics]
